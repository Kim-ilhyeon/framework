package com.kh.spring.board.controller;

import java.util.ArrayList;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.kh.spring.board.model.vo.Board;
import com.kh.spring.board.model.vo.Reply;
import com.kh.spring.board.service.BoardService;
import com.kh.spring.notice.model.dto.SearchDto;

@RestController			// => @Controller + @ResponseBody
						// 모든 요청에 대한 응답을 페이지(화면)가 아닌 데이터로 응답하겠다.
@RequestMapping("/api/board")
public class BoardAPIController {
	
	private final BoardService bService;
	public BoardAPIController(BoardService bService) {
		this.bService = bService;
	}
	// PUT: 수정 / DELETE: 삭제
	
	@PostMapping("/reply")		// POST: 추가
	public String replyInsert(Reply reply) {
		System.out.println("controller로 요청은 들어옴 / 전달받은 reply : " + reply);
		// * 댓글 정보를 DB 추가
		int result = bService.insertReply(reply);
		System.out.println("댓글 등록 후 result " + result);
		
		if (result > 0) {
			// * 댓글 추가 성공 시 "success"라는 문자로 응답!
			return "success";
		} else {
			// * 댓글 추가 실패 시 "failed"라는 문자로 응답
			return "failed";
		}
		
		
		
	}
	
	@GetMapping("reply")		// GET: 조회
	public ArrayList selectReplyList(@RequestParam(required=true) int boardNo) {
		
		// 댓글 정보를 조회
		ArrayList<Reply> replyList = bService.selectReplyList(boardNo);
		
		if (replyList != null) {
			// 댓글 리스트 조회 성공
			
		} else {
			// 댓글 리스트 조회 실패
		}
		
		// 조회된 결과 응답(반환)
		return replyList;
		
		
	}
	
	@GetMapping("top5")
	public ArrayList selectBoardTop5(SearchDto searchDto) {
		
		ArrayList<Board> boardTop5 = bService.selectBoardTop5(searchDto);
		
		return boardTop5;
		
	}
	
}
