package com.kh.spring.board.service;

import java.util.ArrayList;

import org.apache.ibatis.session.RowBounds;
import org.springframework.stereotype.Service;

import com.kh.spring.board.model.dao.BoardDao;
import com.kh.spring.board.model.vo.Board;
import com.kh.spring.board.model.vo.Reply;
import com.kh.spring.common.PageInfo;
import com.kh.spring.notice.model.dto.SearchDto;

@Service
public class BoardServiceImpl implements BoardService {
	
	// 생성자 주입 방식
	private final BoardDao bDao;
	
	public BoardServiceImpl(BoardDao bDao) {
		this.bDao = bDao;
	}
	// -----------

	@Override
	public ArrayList<Board> selectBoardList(SearchDto searchDto, PageInfo pi) {
		
		// RowBounds 객체 => MyBatis 프레임 워크에서 제공하는 객체
		int offset = (pi.getCurrPage() -1) * pi.getBoardLimit();
		RowBounds rb = new RowBounds(offset,pi.getBoardLimit());
		
		
		ArrayList list = bDao.selectBoardList(searchDto, rb);
		
		return list;
	}

	/**
	 * 게시글 개수 조회
	 */
	@Override
	public int selectBoardCount(SearchDto searchDto) {
		int result = bDao.selectBoardCount(searchDto);
		System.out.println("서비스에서의 searchDto : " + searchDto);
		return result;
	}

	@Override
	public Board selectBoardDetail(int boardNo) {

		Board board = bDao.selectBoard(boardNo);
		
		return board;
	}

	@Override
	public int insertBoard(Board board) {

		int result = bDao.insertBoard(board);

		return result;
	}

	@Override
	public int updateBoard(Board board) {
		System.out.println("서비스 로 업데이트 들어오긴했음");
		int result = bDao.updateBoard(board);
		
		return result;
	}

	@Override
	public int deleteBoard(int boardNo) {

		int result = bDao.deleteBoard(boardNo);
		
		return result;
	}

	@Override
	public int insertReply(Reply reply) {
		
		int result = bDao.insertReply(reply);
		
		return result;
	}

	@Override
	public ArrayList<Reply> selectReplyList(int boardNo) {
		
		ArrayList<Reply> replyList = bDao.selectReplyList(boardNo);
		
		return replyList;
	}

	@Override
	public int increaseCount(int boardNo) {
		
		 int result = bDao.increaseCount(boardNo);
		
		 return result;
	}

	@Override
	public ArrayList<Board> selectBoardTop5() {
		// * RowBounds 겍체 사용 => 페이징 처리 시 활용했던 객체
		//    => RowBounds (시작위치, 개수)
		RowBounds rb = new RowBounds(0, 5);
		
		// * 실행할 쿼리문 => 게시글 목록 조회 시 사용했던 쿼리문 사용
		// 	SerchDto 객체에 정렬 기준 데이터를 추가
		SerchDto serchDto = new SerchDto();
		serchDto.setOrderby("count");
		
		ArrayList<Board> boardTop5 = bDao.selectBoardList(rb, searchDto);
		
		return boardTop5;
		
	}

	
	
	
	
}
